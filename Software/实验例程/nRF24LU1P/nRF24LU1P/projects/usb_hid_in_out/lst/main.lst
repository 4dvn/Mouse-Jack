C51 COMPILER V9.52.0.0   MAIN                                                              04/11/2016 14:26:43 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Object\main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c LARGE OBJECTADVANCED REGFILE(.\Object\usb_hid_in_out.ORC) BROWSE NOI
                    -NTPROMOTE INCDIR(..\..\compiler\common;..\..\hal\nrf24lu1p;..\..\hal;..\..\compiler\c51) PRINT(.\lst\main.lst) TABS(2) O
                    -BJECT(.\Object\main.obj)

line level    source

   1          /****************************************Copyright (c)****************************************************
   2          **                                        
   3          **                                 
   4          **
   5          **--------------File Info---------------------------------------------------------------------------------
   6          ** File name:     main.c
   7          ** Last modified  Date:          
   8          ** Last Version:  1.0
   9          ** Descriptions:    
  10          **            
  11          **--------------------------------------------------------------------------------------------------------
  12          ** Created by:      FiYu
  13          ** Created date:    2014-8-5
  14          ** Version:         1.0
  15          ** Descriptions:    USB HID 收发数据实验程序：NRF24LU1P接收到USB数据后，将USB数据返回。
  16          **            
  17          **--------------------------------------------------------------------------------------------------------
  18          ** Modified by:     
  19          ** Modified date:   
  20          ** Version:       
  21          ** Descriptions:    
  22          **
  23          ** Rechecked by:      
  24          **********************************************************************************************************
             -/
  25          #include "nrf24lu1p.h"
  26          #include <stdio.h> 
  27          #include <stdbool.h>
  28          #include <stdint.h>
  29          #include <string.h>
  30          #include "hal_usb.h"
  31          #include "hal_usb_hid.h"
  32          #include "usb_map.h"
  33          #include "hal_delay.h"
  34          
  35          
  36          /*-------------------管脚定义--------------------------------------------------*/
  37          #define  LED    P04  // 开发板上的指示灯
  38          #define  SW     P05  // 开发板上的按键
  39          
  40          
  41          /* 本例程中nRF24LU1P管脚配置
  42          P00: sck， 编程接口，也可以配置为其他功能。
  43          P01: mosi，编程接口，也可以配置为其他功能。
  44          P02: miso，编程接口，也可以配置为其他功能。
  45          P03: csn， 编程接口，也可以配置为其他功能。
  46          
  47          P04：输出，驱动LED            
  48          P05：输入，按键检测
  49          */
  50          
  51          /*-----------------------------------------------------------------------------
  52          ** 变量定义
C51 COMPILER V9.52.0.0   MAIN                                                              04/11/2016 14:26:43 PAGE 2   

  53          -----------------------------------------------------------------------------*/
  54          static xdata uint8_t usb_in_buf[EP1_2_PACKET_SIZE];
  55          static xdata uint8_t usb_out_buf[EP1_2_PACKET_SIZE];
  56          static bool xdata app_usb_out_data_ready = false;
  57          static bool xdata app_pending_usb_write = false;
  58          
  59          /*-----------------------------------------------------------------------------
  60          ** USB回调函数声明
  61          -----------------------------------------------------------------------------*/
  62          hal_usb_dev_req_resp_t device_req_cb(hal_usb_device_req* req, uint8_t** data_ptr, uint8_t* size) large ree
             -ntrant;
  63          void resume_cb() large reentrant;
  64          void reset_cb() large reentrant;
  65          void suspend_cb(uint8_t allow_remote_wu) large reentrant;
  66          uint8_t ep_1_in_cb(uint8_t *adr_ptr, uint8_t* size) large reentrant;
  67          uint8_t ep_2_out_cb(uint8_t *adr_ptr, uint8_t* size) large reentrant;
  68          static void app_send_usb_in_data(uint8_t * buf, uint8_t size);
  69          static void app_wait_while_usb_pending();
  70          
  71          /*******************************************************************************************************
  72           * 描  述 : MAIN函数
  73           * 入  参 : none
  74           * 返回值 : none
  75           *******************************************************************************************************/
  76          void main(void)
  77          { 
  78   1        P0DIR = 0xEF;       //配置P0:P04配置为输出
  79   1        
  80   1        // USB初始化
  81   1        hal_usb_init(true, device_req_cb, reset_cb, resume_cb, suspend_cb);   
  82   1        hal_usb_endpoint_config(0x81, EP1_2_PACKET_SIZE, ep_1_in_cb);  // Configure 32 byte IN endpoint 1
  83   1        hal_usb_endpoint_config(0x02, EP1_2_PACKET_SIZE, ep_2_out_cb); // Configure 32 byte OUT endpoint 2
  84   1      
  85   1        EA = 1;         // 使能全局中断
  86   1        P0DIR = 0xEF;   // 配置P0:P04配置为输出
  87   1        LED = 1;        // 熄灭指示灯
  88   1        
  89   1        
  90   1        while(1)
  91   1        {   
  92   2          if(hal_usb_get_state() == CONFIGURED)  // USB已配置?
  93   2          { 
  94   3            if(app_usb_out_data_ready)// USB 接收到主机发送的数据
  95   3            {
  96   4              LED = 0;   // 点亮指示灯
  97   4              app_send_usb_in_data(usb_out_buf, EP1_2_PACKET_SIZE);  // 返回接收数据
  98   4              app_usb_out_data_ready = false;
  99   4              LED = 1;   // 熄灭指示灯
 100   4            }
 101   3          }
 102   2        }
 103   1      }
 104          
 105          /*******************************************************************************************************
 106           * 描  述 : USB向主机发送数据
 107           * 入  参 : buf：发送缓存首地址
 108           *          size：发送数据长度
 109           * 返回值 : none
 110           *******************************************************************************************************/
 111          static void app_send_usb_in_data(uint8_t * buf, uint8_t size)
 112          {
 113   1        app_wait_while_usb_pending();
C51 COMPILER V9.52.0.0   MAIN                                                              04/11/2016 14:26:43 PAGE 3   

 114   1        app_pending_usb_write = true;  
 115   1        memcpy(usb_in_buf, buf, size);
 116   1        hal_usb_send_data(1, usb_in_buf, EP1_2_PACKET_SIZE);
 117   1      }
 118          
 119          static void app_wait_while_usb_pending()
 120          {    
 121   1        uint16_t timeout = 50000;   // Will equal ~ 50-100 ms timeout 
 122   1        while(timeout--)
 123   1        {
 124   2          if(!app_pending_usb_write)
 125   2          {
 126   3            break;
 127   3          }
 128   2        }    
 129   1      }
 130          void suspend_cb(uint8_t allow_remote_wu) large reentrant
 131          {
 132   1        USBSLP = 1; // Disable USB clock (auto clear)
 133   1        allow_remote_wu = 0;  
 134   1      }
 135          
 136          hal_usb_dev_req_resp_t device_req_cb(hal_usb_device_req* req, uint8_t** data_ptr, uint8_t* size) large ree
             -ntrant
 137          {
 138   1        hal_usb_dev_req_resp_t retval;
 139   1      
 140   1        if( hal_usb_hid_device_req_proc(req, data_ptr, size, &retval) == true ) 
 141   1        {
 142   2          // The request was processed with the result stored in the retval variable
 143   2          return retval;
 144   2        }
 145   1        else
 146   1        {
 147   2          // The request was *not* processed by the HID subsystem
 148   2          return STALL;   
 149   2        }
 150   1      }
 151          void resume_cb(void) large reentrant
 152          {
 153   1      }
 154          
 155          void reset_cb(void) large reentrant
 156          {
 157   1      }
 158          //-----------------------------------------------------------------------------
 159          // USB Endpoint Callbacks
 160          //-----------------------------------------------------------------------------  
 161          uint8_t ep_1_in_cb(uint8_t *adr_ptr, uint8_t* size) large reentrant
 162          {  
 163   1        app_pending_usb_write = false;
 164   1        return 0x60; // NAK
 165   1        adr_ptr = adr_ptr;
 166   1        size = size;
 167   1      }
 168          
 169          uint8_t ep_2_out_cb(uint8_t *adr_ptr, uint8_t* size) large reentrant
 170          {
 171   1        memcpy(usb_out_buf, adr_ptr, *size);
 172   1        app_usb_out_data_ready = true;
 173   1        return 0xff; 
 174   1      }
C51 COMPILER V9.52.0.0   MAIN                                                              04/11/2016 14:26:43 PAGE 4   

 175           /*********************************END FILE***************************************************************
             -*/  
*** WARNING C294 IN LINE 165 OF main.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    492    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     66       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
